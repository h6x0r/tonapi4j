<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.github.h6x0r</groupId>
  <artifactId>tonapi4j</artifactId>
  <version>1.0.5-SNAPSHOT</version>

  <properties>
    <maven.compiler.source>8</maven.compiler.source>
    <maven.compiler.target>8</maven.compiler.target>
    <apache.http.client>4.5.13</apache.http.client>
    <lombok.version>1.18.24</lombok.version>
    <jackson.databind.version>2.18.0</jackson.databind.version>
    <slf4j.version>1.6.1</slf4j.version>
    <tyrus.client.version>1.17</tyrus.client.version>
    <junit.jupiter.engine>5.10.0</junit.jupiter.engine>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <surefire.plugin.version>3.1.2</surefire.plugin.version>
    <maven.compiler.plugin>3.10.1</maven.compiler.plugin>
    <maven.source.plugin>2.2.1</maven.source.plugin>
    <maven.javadoc.plugin>3.4.1</maven.javadoc.plugin>
    <maven.gpg.plugin>1.5</maven.gpg.plugin>
    <central.publishing.maven.plugin>0.6.0</central.publishing.maven.plugin>
    <nexus.staging.plugin>1.6.7</nexus.staging.plugin>
  </properties>

  <name>tonapi4j</name>
  <description>Java library for interacting with TON API</description>
  <url>https://github.com/h6x0r/tonapi4j</url>

  <licenses>
    <license>
      <name>MIT License</name>
      <url>https://opensource.org/licenses/MIT</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>h6x0r</id>
      <name>h6x0r</name>
      <email>inteldom5@gmail.com</email>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git://github.com/h6x0r/tonapi4j.git</connection>
    <developerConnection>scm:git:git@github.com:h6x0r/tonapi4j.git</developerConnection>
    <url>https://github.com/h6x0r/tonapi4j/tree/master</url>
    <tag>tonapi4j-1.0.5</tag>
  </scm>

  <dependencies>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.databind.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <!-- Websocket client dependency -->
    <dependency>
      <groupId>org.glassfish.tyrus.bundles</groupId>
      <artifactId>tyrus-standalone-client</artifactId>
      <version>${tyrus.client.version}</version>
    </dependency>

    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>okhttp</artifactId>
      <version>3.14.9</version>
    </dependency>

    <!-- JUnit 5 -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.jupiter.engine}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>

      <!-- Maven Compiler Plugin: Compiles Java source code -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin}</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
        </configuration>
      </plugin>

      <!-- Maven Surefire Plugin: Runs unit tests during the test phase -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire.plugin.version}</version>
      </plugin>

      <!-- Maven Source Plugin: Generates a source JAR to include source code in the build artifacts -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven.source.plugin}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>package</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Maven Javadoc Plugin: Generates Javadoc documentation and packages it into a JAR -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven.javadoc.plugin}</version>
        <configuration>
          <doclint>none</doclint>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Maven GPG plugin used to sign the components. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>${maven.gpg.plugin}</version>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>verify</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Maven Plugin for Deployment and Release -->

      <plugin>
        <groupId>org.sonatype.central</groupId>
        <artifactId>central-publishing-maven-plugin</artifactId>
        <version>${central.publishing.maven.plugin}</version>
        <extensions>true</extensions>
        <configuration>
          <publishingServerId>central</publishingServerId>
          <autoPublish>true</autoPublish>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>${nexus.staging.plugin}</version>
        <extensions>true</extensions>
        <configuration>
          <serverId>central</serverId>
          <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
          <autoReleaseAfterClose>true</autoReleaseAfterClose>
        </configuration>
      </plugin>

    </plugins>
  </build>

  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

</project>